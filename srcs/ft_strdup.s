section .text
global ft_strdup

ft_strdup:
    ; Аргументы функции:
    ;   rdi - указатель на исходную строку (источник)

    ; Вычисляем длину строки
    xor     rcx, rcx        ; Используем rcx как счетчик байт
    mov     rax, rdi        ; Копируем указатель на источник в rax
count_loop:
    cmp     byte [rax], 0   ; Проверяем, достигли ли конца строки
    je      end_count       ; Если да, завершаем подсчет
    inc     rax             ; Переходим к следующему байту
    inc     rcx             ; Увеличиваем счетчик
    jmp     count_loop      ; Переходим к следующему байту строки

end_count:
    inc     rcx             ; Увеличиваем счетчик для нулевого байта (конец строки)

    ; Выделяем память под новую строку с использованием malloc
    push    rdi             ; Сохраняем указатель на исходную строку
    mov     rdi, rcx        ; Размер строки
    mov     rax, 0x09       ; Номер системного вызова для malloc
    syscall
    pop     rdi             ; Восстанавливаем указатель на исходную строку

    ; Копируем строку из источника в новый буфер
    mov     rsi, rax        ; Указатель на новый буфер
    mov     rdi, rdi        ; Источник (исходная строка)
    mov     rdx, rcx        ; Размер данных для копирования
    mov     rax, 0x04       ; Номер системного вызова для memcpy (не используем syscall)
    syscall

    ret
